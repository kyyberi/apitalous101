{
  "swagger" : "2.0",
  "info" : {
    "description" : "API-talous 101 on perusteos kaikille API-talouteen haikaileville organisaatioille. Kirja on saatavilla normaaleja ja tunnettuja reittejä kuten kirjakaupat, mutta niiden lisäksi päätimme tarjota kirjan sisällön myös API:n kautta.   \n\n  Kirjan kirjoitti 4 eri API-talouden ammattilaista lähinnä iltapuhteena (ja osittain öisin) arkisen työn ohessa. Kirjan tarjoaminen tästä aiheesta API:na tuli mieleen eräänä iltana kirjoittajien pohtiessa kirjan kustantamista. Pakkohan tämä on tehdä API:ksi myös! Siitä se sitten lähti. \n  \n  Jarkko Moilanen teki API:n designin. Jotta API:n toteutus olisi huippuluokkaa, päätimme kutsua mukaan kaksi huipputason kovaa API-ammattilaista: Jani Karhusen ja Viljami Kuosmasen. \n\n  Lue lisää https://apitalous101.fi \n  \n  -------\n  \n  ### Muutama esimerkki API:n käytöstä\n\n**Listaa kirjan luvut** \n\n`` \nGET /chapters\n``\n\n<pre>\ncurl -X GET https://apinf.io:3002/apitalous101/chapters \n  -H  \"accept: application/json\" \n  -H  \"X-API-Key: my-api-key\" \n  -H  \"content-type: application/json\" \n</pre>\n\n\n **Listaa kirjan kuvat** \n\n`` \nGET /images\n``\n\n<pre>\ncurl -X GET https://apinf.io:3002/apitalous101/images\n  -H  \"accept: application/json\" \n  -H  \"X-API-Key: my-api-key\" \n  -H  \"content-type: application/json\" \n</pre>\n",
    "version" : "1.0.0",
    "title" : "API-talous 101 kirja REST API",
    "contact" : {
      "email" : "jarkko@apinf.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "securityDefinitions" : {
    "userSecurityToken" : {
      "in" : "header",
      "name" : "X-Auth-Token",
      "type" : "apiKey"
    },
    "userId" : {
      "in" : "header",
      "name" : "X-User-Id",
      "type" : "apiKey"
    }
  },
  "tags" : [ {
    "name" : "readers",
    "description" : "Operations available to regular readers"
  }, {
    "name" : "authentication",
    "description" : "How to authenticate. For authors"
  }, {
    "name" : "authors",
    "description" : "Secured Author-only calls"
  } ],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "authentication" ],
        "summary" : "Logging in",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "description" : "### Logging in ###\n\nBy giving existing user account username and password you get login credentials,\nwhich you can use when authenticating requests.\n\nlogin response parameter value | to be filled into request header field\n:--- | :---\nauth-token-value | X-Auth-Token\nuser-id-value | X-User-Id\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "formData",
          "name" : "user",
          "type" : "string",
          "required" : true,
          "description" : "User login data"
        }, {
          "in" : "formData",
          "name" : "password",
          "type" : "string",
          "required" : true,
          "description" : "Password for User"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LoginResponse"
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          }
        }
      }
    },
    "/logout" : {
      "post" : {
        "tags" : [ "authentication" ],
        "summary" : "Logging out",
        "description" : "### Logging out ###\n\nThe login credentials must be filled in header of the message.\n\nlogin response parameter value | to be filled into request header field\n:--- | :---\nauth-token-value | X-Auth-Token\nuser-id-value | X-User-Id\n\nAfter logout the User has to do a *new log in* in order to be able to\nmake requests towards API endpoints.\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "You have been logged out",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "example" : "success"
                },
                "message" : {
                  "type" : "string",
                  "example" : "You have been logged out"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          }
        }
      }
    },
    "/title" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "Get the book title",
        "operationId" : "searchTitle",
        "description" : "Get the book title. Simple as that, nothing less nothing more\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "requested book title",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds book title item",
        "operationId" : "addTitle",
        "description" : "Adds an item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Inventory item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates book title",
        "operationId" : "updateTitle",
        "description" : "Updates title to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "chapter",
          "description" : "Chapter to update",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "book title item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/prologue" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "Get the book prologue",
        "operationId" : "searchPrologue",
        "description" : "Get the book prologue. Simple as that, nothing less nothing more\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "requested book prologue",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds a prologue item",
        "operationId" : "addPrologue",
        "description" : "Adds a prologue item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Prologue item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "prologue item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing item already exists. Use PUT method to update existing prologue."
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates prologue",
        "operationId" : "updatePrologue",
        "description" : "Updates prologue to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "chapter",
          "description" : "Prologue to update",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "prologue item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/acknowledgements" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "Get the book acknowledgements",
        "operationId" : "searchacknowledgements",
        "description" : "Get the book acknowledgements. Simple as that, nothing less nothing more\n",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "requested book acknowledgements",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds a acknowledgements item",
        "operationId" : "addAcknowledgements",
        "description" : "Adds acknowledgements item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Acknowledgements item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "acknowledgements item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing acknowledgements already exists. Use PUT method to update existing acknowledgements."
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates acknowledgements",
        "operationId" : "updateAcknowledgements",
        "description" : "Updates acknowledgements to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "chapter",
          "description" : "Acknowledgements to update",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "acknowledgements item updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/chapters" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "List and search chapters by title",
        "operationId" : "searchChapters",
        "description" : "List and search chapters by title. With paramaters you can limit the list length. With param 'q' you can search titles. \n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "q",
          "description" : "pass an optional search string",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds a chapter",
        "operationId" : "addChapter",
        "description" : "Adds a chapter to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Chapter item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/chapters/{id}" : {
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates a chapter",
        "operationId" : "updateInventory",
        "description" : "Updates a chapter item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        }, {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Chapter item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "authors" ],
        "summary" : "removes a chapter",
        "operationId" : "removeChapter",
        "description" : "Removes a chapter item from the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "item removed"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/authors" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "list and searches book authors",
        "operationId" : "searchAuthors",
        "description" : "By passing in the appropriate options, you can search for\nauthors\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "q",
          "description" : "pass an optional search string",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds an author item",
        "operationId" : "addAuthor",
        "description" : "Adds an author item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Author item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "author created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing authot already exists"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/authors/{id}" : {
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates an author",
        "operationId" : "updateAuthor",
        "description" : "Updates a author item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        }, {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Author item to update",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "author updated"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "authors" ],
        "summary" : "removes an author",
        "operationId" : "removeAuthor",
        "description" : "Removes an author from the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "author removed"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/images" : {
      "get" : {
        "tags" : [ "readers" ],
        "summary" : "search and list images",
        "operationId" : "searchImages",
        "description" : "By passing in the appropriate options, you can search for\navailable images in the system\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "q",
          "description" : "pass an optional search string for looking up images",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "skip",
          "description" : "number of records to skip for pagination",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "maximum number of records to return",
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 50
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryItem"
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "adds an image item",
        "operationId" : "addImage",
        "description" : "Adds an image item to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Image item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "image item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          },
          "409" : {
            "description" : "an existing image item already exists. Use UPDATE method to replace existing image."
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    },
    "/images/{id}" : {
      "put" : {
        "tags" : [ "authors" ],
        "summary" : "updates an image",
        "operationId" : "updateImage",
        "description" : "Updates an image to the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        }, {
          "in" : "body",
          "name" : "inventoryItem",
          "description" : "Image item to add",
          "schema" : {
            "$ref" : "#/definitions/InventoryItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "image item created"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "authors" ],
        "summary" : "removes an image",
        "operationId" : "removeImage",
        "description" : "Removes an image from the system",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "image item removed"
          },
          "400" : {
            "description" : "invalid input, object invalid"
          }
        },
        "security" : [ {
          "userSecurityToken" : [ ],
          "userId" : [ ]
        } ]
      }
    }
  },
  "definitions" : {
    "InventoryItem" : {
      "type" : "object",
      "required" : [ "id", "name", "manufacturer", "releaseDate" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d290f1ee-6c54-4b01-90e6-d701748f0851"
        },
        "name" : {
          "type" : "string",
          "example" : "Widget Adapter"
        },
        "releaseDate" : {
          "type" : "string",
          "format" : "int32",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "manufacturer" : {
          "$ref" : "#/definitions/Manufacturer"
        }
      }
    },
    "Manufacturer" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "ACME Corporation"
        },
        "homePage" : {
          "type" : "string",
          "format" : "url",
          "example" : "https://www.acme-corp.com"
        },
        "phone" : {
          "type" : "string",
          "example" : "408-867-530"
        }
      }
    },
    "LoginResponse" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "success"
        },
        "data" : {
          "type" : "object",
          "properties" : {
            "authToken" : {
              "type" : "string",
              "example" : "auth-token-value"
            },
            "userId" : {
              "type" : "string",
              "example" : "user-id-value"
            }
          }
        }
      }
    }
  }
}